h2 Null Safety

p If something can be null you *have* to guard against it!

pre
  code.lang-kotlin
    | var value: String? = null        // Declare a mutable null value
    |
    .fragment
      |
      | value.length                     // Rejected by compiler, value can be null!
      |
    .fragment
      |
      | if (value != null) {
      |     value.length                 // Still not okay, value could have changed really fast
      | }
      |
    .fragment
      |
      | value?.length                    // Null-safe traversal, results in 'length' or 'null'
      |
    .fragment
      |
      | value?.length ?: "Default value" // Elvis operator! Results in length or 'Default value'
      |

pre.fragment
  code.lang-kotlin
    | val value: String? = null          // Declare an immutable null value
    |
    .fragment
      |
      | if (value != null) {
      |     value.length                   // Okay, value couldn't have changed since check
      | }